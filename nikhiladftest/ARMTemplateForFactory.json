{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nikhiladftest"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDatabricksDeltaLake1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksDeltaLake1'"
		},
		"AzureDatabricksDeltaLake2_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksDeltaLake2'"
		},
		"AzureMySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureTableStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage1'"
		},
		"CosmosDbMongoDbApi1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDbApi1'"
		},
		"coolblobstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'coolblobstorage'"
		},
		"linkedService1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linkedService1'"
		},
		"nikhilcoolblob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'nikhilcoolblob'"
		},
		"nikhilgen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'nikhilgen2'"
		},
		"secondstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'secondstorage'"
		},
		"AzureBlobStorage1_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://nikhilgen2.blob.core.windows.net"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nikhildemo1.dfs.core.windows.net"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nikhilgen2.dfs.core.windows.net"
		},
		"CosmosDbMongoDbApi1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "mongoapidatabase"
		},
		"linkedService1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\nikhildemo1.file.core.windows.net\\demofileshare"
		},
		"linkedService1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "Azure\\nikhildemo1"
		},
		"nikhilgen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nikhilgen2.dfs.core.windows.net"
		},
		"Trigger_puo_properties_CopyPipeline_default_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@{addhours(trigger().scheduledTime, -24)}"
		},
		"Trigger_puo_properties_CopyPipeline_default_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"AzureBlobStorage1_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c13d1ec-c5e1-4e05-9a4e-513e8105a90b/resourceGroups/imemyself/providers/Microsoft.Storage/storageAccounts/nikhildemo1"
		},
		"AzureBlobStorage1_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage1_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"nikhildemo1.blob.core.windows.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_default')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_puo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_puo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-06-04T11:59:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_puo')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_puo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "testparquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-06-30T06:35:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "CosmosDbMongoDbApiSink",
								"writeBatchTimeout": "00:30:00",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AzureMySqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbMongoDbApiCollection1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-07-07T05:32:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbMongoDbApiCollection1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "nikhilgen2nikhilgen2filesysteminput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "nikhilcoolblob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/nikhilgen2nikhilgen2filesysteminput')]",
				"[concat(variables('factoryId'), '/datasets/nikhilcoolblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [
							{
								"name": "name",
								"value": "n"
							}
						],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"class": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-07-12T11:49:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "persons"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApiCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDbApi1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "collection1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbMongoDbApi1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "secondstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Prep_RetailSite.txt",
						"container": "thirdcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/secondstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "secondstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "1",
						"container": "thirdcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/secondstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_puo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "secondstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test1",
						"container": "secondcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/secondstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "secondstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Prep_RetailSite.parquet",
						"container": "secondcontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "MDM_SITE_ID",
						"type": "UTF8"
					},
					{
						"name": "GLOBAL_SITE_ID",
						"type": "UTF8"
					},
					{
						"name": "SITE_NAME",
						"type": "UTF8"
					},
					{
						"name": "SITE_SHORT_NAME",
						"type": "UTF8"
					},
					{
						"name": "LONGITUDE",
						"type": "UTF8"
					},
					{
						"name": "LATITUDE",
						"type": "UTF8"
					},
					{
						"name": "SITE_OPENING_DATE",
						"type": "UTF8"
					},
					{
						"name": "SITE_CLOSING_DATE",
						"type": "UTF8"
					},
					{
						"name": "SITE_FRONTAGE",
						"type": "INT32"
					},
					{
						"name": "SITE_DEPTH",
						"type": "INT32"
					},
					{
						"name": "SITE_SIZE_AREA",
						"type": "INT32"
					},
					{
						"name": "SHOP_BUILDING_SIZE",
						"type": "INT32"
					},
					{
						"name": "SHOP_SELLING_SPACE_SIZE",
						"type": "INT32"
					},
					{
						"name": "CITY_NAME",
						"type": "UTF8"
					},
					{
						"name": "STREET_ADDRESS",
						"type": "UTF8"
					},
					{
						"name": "POSTAL_CODE",
						"type": "UTF8"
					},
					{
						"name": "FAX_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "TELEPHONE_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "OPERATOR_MASTER_EMAIL_ADDRESS",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_NAME",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_CITY_NAME",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_COUNTRY_CODE",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_TERRITORY_CODE",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_STREET_ADDRESS",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_POSTAL_CODE",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_LANGUAGE",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_START_DATE",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_END_DATE",
						"type": "UTF8"
					},
					{
						"name": "FACILITY_TYPE_CODE",
						"type": "UTF8"
					},
					{
						"name": "OPENING_HOURS_ID",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FROM_DAY_OF_WEEK_CODE",
						"type": "UTF8"
					},
					{
						"name": "TO_DAY_OF_WEEK_CODE",
						"type": "UTF8"
					},
					{
						"name": "OPENING_FROM_DATETIME",
						"type": "UTF8"
					},
					{
						"name": "OPENING_TO_DATETIME",
						"type": "UTF8"
					},
					{
						"name": "LEGACY_SITE_ID",
						"type": "UTF8"
					},
					{
						"name": "LEGACY_SITE_TYPE_CODE",
						"type": "UTF8"
					},
					{
						"name": "CURRENCY_ISO_CODE",
						"type": "UTF8"
					},
					{
						"name": "CURRENCY_NAME",
						"type": "UTF8"
					},
					{
						"name": "START_DATE",
						"type": "UTF8"
					},
					{
						"name": "END_DATE",
						"type": "UTF8"
					},
					{
						"name": "RETAIL_SITE_TYPE_CODE",
						"type": "UTF8"
					},
					{
						"name": "RETAIL_SITE_TYPE_NAME",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/secondstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "secondstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Prep_RetailSite.parquet",
						"container": "secondcontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "MDM_SITE_ID",
						"type": "UTF8"
					},
					{
						"name": "GLOBAL_SITE_ID",
						"type": "UTF8"
					},
					{
						"name": "SITE_NAME",
						"type": "UTF8"
					},
					{
						"name": "SITE_SHORT_NAME",
						"type": "UTF8"
					},
					{
						"name": "LONGITUDE",
						"type": "UTF8"
					},
					{
						"name": "LATITUDE",
						"type": "UTF8"
					},
					{
						"name": "SITE_OPENING_DATE",
						"type": "UTF8"
					},
					{
						"name": "SITE_CLOSING_DATE",
						"type": "UTF8"
					},
					{
						"name": "SITE_FRONTAGE",
						"type": "INT32"
					},
					{
						"name": "SITE_DEPTH",
						"type": "INT32"
					},
					{
						"name": "SITE_SIZE_AREA",
						"type": "INT32"
					},
					{
						"name": "SHOP_BUILDING_SIZE",
						"type": "INT32"
					},
					{
						"name": "SHOP_SELLING_SPACE_SIZE",
						"type": "INT32"
					},
					{
						"name": "CITY_NAME",
						"type": "UTF8"
					},
					{
						"name": "STREET_ADDRESS",
						"type": "UTF8"
					},
					{
						"name": "POSTAL_CODE",
						"type": "UTF8"
					},
					{
						"name": "FAX_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "TELEPHONE_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "OPERATOR_MASTER_EMAIL_ADDRESS",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_NAME",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_CITY_NAME",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_COUNTRY_CODE",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_TERRITORY_CODE",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_STREET_ADDRESS",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_POSTAL_CODE",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_LANGUAGE",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_START_DATE",
						"type": "UTF8"
					},
					{
						"name": "BUSINESS_CUSTOMER_END_DATE",
						"type": "UTF8"
					},
					{
						"name": "FACILITY_TYPE_CODE",
						"type": "UTF8"
					},
					{
						"name": "OPENING_HOURS_ID",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FROM_DAY_OF_WEEK_CODE",
						"type": "UTF8"
					},
					{
						"name": "TO_DAY_OF_WEEK_CODE",
						"type": "UTF8"
					},
					{
						"name": "OPENING_FROM_DATETIME",
						"type": "UTF8"
					},
					{
						"name": "OPENING_TO_DATETIME",
						"type": "UTF8"
					},
					{
						"name": "LEGACY_SITE_ID",
						"type": "UTF8"
					},
					{
						"name": "LEGACY_SITE_TYPE_CODE",
						"type": "UTF8"
					},
					{
						"name": "CURRENCY_ISO_CODE",
						"type": "UTF8"
					},
					{
						"name": "CURRENCY_NAME",
						"type": "UTF8"
					},
					{
						"name": "START_DATE",
						"type": "UTF8"
					},
					{
						"name": "END_DATE",
						"type": "UTF8"
					},
					{
						"name": "RETAIL_SITE_TYPE_CODE",
						"type": "UTF8"
					},
					{
						"name": "RETAIL_SITE_TYPE_NAME",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/secondstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_puo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Team_List1.xlsx",
						"container": "firstcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nikhilcoolblob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nikhilcoolblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "directory",
						"container": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nikhilcoolblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nikhilgen2nikhilgen2filesysteminput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nikhilgen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test.xlsx",
						"folderPath": "Input",
						"fileSystem": "nikhilgen2filesystem"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nikhilgen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/thirdcontainer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "secondstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "thirdcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/secondstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage1_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-8882260657641500.0.azuredatabricks.net",
					"clusterId": "EJDDAKCSDLC",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake1_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-8882260657641500.0.azuredatabricks.net",
					"clusterId": "0630-060356-donor322",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake2_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApi1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDbApi1_connectionString')]",
					"database": "[parameters('CosmosDbMongoDbApi1_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/coolblobstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('coolblobstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"host": "[parameters('linkedService1_properties_typeProperties_host')]",
					"userId": "[parameters('linkedService1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linkedService1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nikhilcoolblob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('nikhilcoolblob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nikhilgen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('nikhilgen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('nikhilgen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/secondstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('secondstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_puo')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline_default",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('Trigger_puo_properties_CopyPipeline_default_parameters_windowStart')]",
							"windowEnd": "[parameters('Trigger_puo_properties_CopyPipeline_default_parameters_windowEnd')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "wait",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2021-05-21T17:10:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_default')]",
				"[concat(variables('factoryId'), '/pipelines/wait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-07-12T11:42:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wait_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "wait",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-07-12T17:15:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/wait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ManagedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Central India",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": true
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSISIRdemo1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Central India",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"edition": "Standard",
						"licenseType": "LicenseIncluded",
						"packageStores": [
							{
								"name": "packagestore2",
								"packageStoreLinkedService": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								}
							}
						]
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempSHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Central India",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"edition": "Standard",
						"licenseType": "LicenseIncluded",
						"dataProxyProperties": {
							"connectVia": {
								"type": "IntegrationRuntimeReference",
								"referenceName": "SHIR"
							},
							"stagingLinkedService": {
								"type": "LinkedServiceReference",
								"referenceName": "AzureBlobStorage1"
							}
						},
						"packageStores": [
							{
								"name": "tesy12",
								"packageStoreLinkedService": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								}
							}
						]
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Central India",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage1_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage1_properties_groupId')]",
				"fqdns": "[parameters('AzureBlobStorage1_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}